name: Build

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      os:
        required: true
        type: string
      buildArgs:
        required: true
        type: string
      artifactName:
        required: true
        type: string
      artifactPath:
        required: true
        type: string

env:
  HAXE_VERSION: 4.3.5
  PROJECT_NAME: PsychEngine

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        if: inputs.name != 'Linux ARM64'
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Setup Haxe (Linux ARM64 Workaround)
        if: inputs.name == 'Linux ARM64'
        run: |
          sudo apt install haxe -y
          haxelib setup ~/haxelib

      - name: Setup MSVC ARM64
        if: inputs.name == 'Windows ARM64'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: amd64_arm64

      - name: Install libVLC
        if: contains(inputs.name, 'Linux')
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Restore Previous Cache
        if: inputs.name == 'Android'
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build
      
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp.git
          haxelib git lime https://github.com/mcagabe19-stuff/lime
          haxelib git openfl https://github.com/mcagabe19-stuff/openfl 9.1.0
          haxelib install flixel 4.11.0
          haxelib install flixel-ui 2.4.0
          haxelib install flixel-addons 2.11.0
          haxelib install hscript 2.4.0
          haxelib git hxCodec https://github.com/MobilePorting/hxCodec-0.6.3
          haxelib git discord_rpc https://github.com/MobilePorting/linc_discord-rpc-0.6.3
          haxelib git linc_luajit https://github.com/MobilePorting/linc_luajit-0.6.3
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools
          haxelib list

      - name: Configure Android
        if: inputs.name == 'Android'
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_arm64
          haxelib run lime config ANDROID_SETUP true

      - name: Compile
        run: haxelib run lime build ${{ inputs.buildArgs }}

      - name: Clear Previous Cache
        if: inputs.name == 'Android'
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }
      - name: Save Current Cache
        if: inputs.name == 'Android'
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build
      
      - name: Make IPA
        if: inputs.name == 'iOS'
        run: |
          cd export/release/ios/build/Release-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r ${{ env.PROJECT_NAME }}.ipa Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ inputs.artifactPath }}
          if-no-files-found: error
